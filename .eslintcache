[{"E:\\Study\\React projects\\Expense\\expense_tracker\\src\\index.js":"1","E:\\Study\\React projects\\Expense\\expense_tracker\\src\\reportWebVitals.js":"2","E:\\Study\\React projects\\Expense\\expense_tracker\\src\\App.js":"3","E:\\Study\\React projects\\Expense\\expense_tracker\\src\\component\\detail\\InfoCard.jsx":"4","E:\\Study\\React projects\\Expense\\expense_tracker\\src\\component\\detail\\styles.js":"5","E:\\Study\\React projects\\Expense\\expense_tracker\\src\\styles.js":"6","E:\\Study\\React projects\\Expense\\expense_tracker\\src\\component\\Holder\\Body.jsx":"7","E:\\Study\\React projects\\Expense\\expense_tracker\\src\\component\\Holder\\styles.js":"8","E:\\Study\\React projects\\Expense\\expense_tracker\\src\\component\\Holder\\Form\\NewForm.jsx":"9","E:\\Study\\React projects\\Expense\\expense_tracker\\src\\constants\\categories.js":"10","E:\\Study\\React projects\\Expense\\expense_tracker\\src\\component\\Holder\\Form\\styles.js":"11","E:\\Study\\React projects\\Expense\\expense_tracker\\src\\utils\\formateDate.js":"12","E:\\Study\\React projects\\Expense\\expense_tracker\\src\\context\\context.js":"13","E:\\Study\\React projects\\Expense\\expense_tracker\\src\\context\\contextReducer.js":"14","E:\\Study\\React projects\\Expense\\expense_tracker\\src\\component\\Holder\\List\\List.js":"15","E:\\Study\\React projects\\Expense\\expense_tracker\\src\\component\\Holder\\List\\styles.js":"16","E:\\Study\\React projects\\Expense\\expense_tracker\\src\\useTransactions.js":"17"},{"size":695,"mtime":1609064714892,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":1511,"mtime":1609066524557,"results":"21","hashOfConfig":"19"},{"size":700,"mtime":1609066680911,"results":"22","hashOfConfig":"19"},{"size":333,"mtime":1609078748393,"results":"23","hashOfConfig":"19"},{"size":582,"mtime":1608986487102,"results":"24","hashOfConfig":"19"},{"size":1307,"mtime":1609077761736,"results":"25","hashOfConfig":"19"},{"size":514,"mtime":1608994948421,"results":"26","hashOfConfig":"19"},{"size":5669,"mtime":1609079064919,"results":"27","hashOfConfig":"19"},{"size":1765,"mtime":1608994896312,"results":"28","hashOfConfig":"19"},{"size":311,"mtime":1609078885053,"results":"29","hashOfConfig":"19"},{"size":317,"mtime":1608994806571,"results":"30","hashOfConfig":"19"},{"size":1013,"mtime":1609078134375,"results":"31","hashOfConfig":"19"},{"size":603,"mtime":1609044854354,"results":"32","hashOfConfig":"19"},{"size":1717,"mtime":1609045981830,"results":"33","hashOfConfig":"19"},{"size":462,"mtime":1609045181723,"results":"34","hashOfConfig":"19"},{"size":1184,"mtime":1609048129880,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1tl9n64",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"E:\\Study\\React projects\\Expense\\expense_tracker\\src\\index.js",[],["79","80"],"E:\\Study\\React projects\\Expense\\expense_tracker\\src\\reportWebVitals.js",[],"E:\\Study\\React projects\\Expense\\expense_tracker\\src\\App.js",["81"],"import InfoCard from \"./component/detail/InfoCard\";\nimport Body from \"./component/Holder/Body\";\nimport { Grid } from \"@material-ui/core\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { SpeechState, useSpeechContext } from \"@speechly/react-client\";\nimport {\n  PushToTalkButton,\n  PushToTalkButtonContainer,\n} from \"@speechly/react-ui\";\nimport useStyles from \"./styles\";\n\nfunction App() {\n  const classes = useStyles();\n  const main = useRef(null);\n\n  const { speechState } = useSpeechContext();\n\n  const executeScroll = () => main.current.scrollIntoView();\n\n  useEffect(() => {\n    if (speechState === SpeechState.Recording) {\n      executeScroll();\n    }\n  }, [speechState]);\n\n  return (\n    <div>\n      <Grid\n        className={classes.grid}\n        container\n        spacing={0}\n        alignItems=\"center\"\n        justify=\"center\"\n        style={{ height: \"100vh\" }}\n      >\n        <Grid item xs={12} sm={4} className={classes.mobile}>\n          <InfoCard title=\"Income\" />\n        </Grid>\n        <Grid ref={main} item xs={12} sm={3} className={classes.main}>\n          <Body />\n        </Grid>\n        <Grid item xs={12} sm={4} className={classes.desktop}>\n          <InfoCard title=\"Income\" />\n        </Grid>\n        <Grid item xs={12} sm={4} className={classes.last}>\n          <InfoCard title=\"Expense\" />\n        </Grid>\n        <PushToTalkButtonContainer>\n          <PushToTalkButton />\n        </PushToTalkButtonContainer>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","E:\\Study\\React projects\\Expense\\expense_tracker\\src\\component\\detail\\InfoCard.jsx",["82"],"import React, { useContext } from \"react\";\r\nimport { Card, CardHeader, CardContent, Typography } from \"@material-ui/core\";\r\nimport useStyles from \"./styles\";\r\nimport useTransactions from \"../../useTransactions\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\n\r\nconst InfoCard = ({ title }) => {\r\n  const { total, chartData } = useTransactions(title);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={title === \"Income\" ? classes.income : classes.expense}>\r\n      <CardHeader title={title} />\r\n      <CardContent>\r\n        <Typography variant=\"h5\">${total}</Typography>\r\n        <Doughnut data={chartData} />\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default InfoCard;\r\n","E:\\Study\\React projects\\Expense\\expense_tracker\\src\\component\\detail\\styles.js",[],"E:\\Study\\React projects\\Expense\\expense_tracker\\src\\styles.js",[],"E:\\Study\\React projects\\Expense\\expense_tracker\\src\\component\\Holder\\Body.jsx",["83","84","85"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  Grid,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport { useSpeechContext } from \"@speechly/react-client\";\r\nimport { ExpenseTrackerContext } from \"../../context/context\";\r\nimport useStyles from \"./styles\";\r\nimport Form from \"./Form/NewForm\";\r\nimport List from \"./List/List\";\r\n// import InfoCard from \"../InfoCard\";\r\n\r\nconst Body = () => {\r\n  const classes = useStyles();\r\n  const { balance } = useContext(ExpenseTrackerContext);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader title=\"Expense Tracker\" />\r\n      <CardContent>\r\n        <Typography align=\"center\" variant=\"h5\">\r\n          Total Balance ${balance}\r\n        </Typography>\r\n        <Typography\r\n          variant=\"subtitle1\"\r\n          style={{ lineHeight: \"1.5em\", marginTop: \"20px\" }}\r\n        >\r\n          {/* <InfoCard /> */}\r\n        </Typography>\r\n        <Divider className={classes.divider} />\r\n        <Form />\r\n      </CardContent>\r\n      <CardContent className={classes.cartContent}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <List />\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","E:\\Study\\React projects\\Expense\\expense_tracker\\src\\component\\Holder\\styles.js",[],"E:\\Study\\React projects\\Expense\\expense_tracker\\src\\component\\Holder\\Form\\NewForm.jsx",["86","87"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport {\r\n  TextField,\r\n  Typography,\r\n  Grid,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { useSpeechContext } from \"@speechly/react-client\";\r\n// import Snackbar from '../../Snackbar/Snackbar';\r\nimport formatDate from \"../../../utils/formateDate\";\r\nimport { ExpenseTrackerContext } from \"../../../context/context\";\r\nimport {\r\n  incomeCategories,\r\n  expenseCategories,\r\n} from \"../../../constants/categories\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst initialState = {\r\n  amount: \"\",\r\n  category: \"\",\r\n  type: \"Income\",\r\n  date: formatDate(new Date()),\r\n};\r\n\r\nconst NewForm = () => {\r\n  const classes = useStyles();\r\n  const { addTransaction } = useContext(ExpenseTrackerContext);\r\n  const [formData, setFormData] = useState(initialState);\r\n  const { segment } = useSpeechContext();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const createTransaction = () => {\r\n    if (!formData.amount || !formData.category) {\r\n      return;\r\n    }\r\n    if (Number.isNaN(Number(formData.amount)) || !formData.date.includes(\"-\"))\r\n      return;\r\n\r\n    if (incomeCategories.map((iC) => iC.type).includes(formData.category)) {\r\n      setFormData({ ...formData, type: \"Income\" });\r\n    } else if (\r\n      expenseCategories.map((iC) => iC.type).includes(formData.category)\r\n    ) {\r\n      setFormData({ ...formData, type: \"Expense\" });\r\n    }\r\n\r\n    setOpen(true);\r\n\r\n    addTransaction({\r\n      ...formData,\r\n      amount: Number(formData.amount),\r\n      id: uuidv4(),\r\n    });\r\n    setFormData(initialState);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (segment) {\r\n      if (segment.intent.intent === \"add_expense\") {\r\n        setFormData({ ...formData, type: \"Expense\" });\r\n      } else if (segment.intent.intent === \"add_income\") {\r\n        setFormData({ ...formData, type: \"Income\" });\r\n      } else if (\r\n        segment.isFinal &&\r\n        segment.intent.intent === \"create_transaction\"\r\n      ) {\r\n        return createTransaction();\r\n      } else if (\r\n        segment.isFinal &&\r\n        segment.intent.intent === \"cancel_transaction\"\r\n      ) {\r\n        return setFormData(initialState);\r\n      }\r\n\r\n      segment.entities.forEach((s) => {\r\n        const category = `${s.value.charAt(0)}${s.value\r\n          .slice(1)\r\n          .toLowerCase()}`;\r\n\r\n        switch (s.type) {\r\n          case \"amount\":\r\n            setFormData({ ...formData, amount: s.value });\r\n            break;\r\n          case \"category\":\r\n            if (incomeCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: \"Income\", category });\r\n            } else if (\r\n              expenseCategories.map((iC) => iC.type).includes(category)\r\n            ) {\r\n              setFormData({ ...formData, type: \"Expense\", category });\r\n            }\r\n            break;\r\n          case \"date\":\r\n            setFormData({ ...formData, date: s.value });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n\r\n      if (\r\n        segment.isFinal &&\r\n        formData.amount &&\r\n        formData.category &&\r\n        formData.type &&\r\n        formData.date\r\n      ) {\r\n        createTransaction();\r\n      }\r\n    }\r\n  }, [segment]);\r\n\r\n  const selectedCategories =\r\n    formData.type === \"Income\" ? incomeCategories : expenseCategories;\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      {/* <Snackbar open={open} setOpen={setOpen} /> */}\r\n      <Grid item xs={12}>\r\n        <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\r\n          {segment ? (\r\n            <div className=\"segment\">\r\n              {segment.words.map((w) => w.value).join(\" \")}\r\n            </div>\r\n          ) : null}\r\n          {/* {isSpeaking ? <BigTranscript /> : \"Start adding transactions\"} */}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Type</InputLabel>\r\n          <Select\r\n            value={formData.type}\r\n            onChange={(e) => setFormData({ ...formData, type: e.target.value })}\r\n          >\r\n            <MenuItem value=\"Income\">Income</MenuItem>\r\n            <MenuItem value=\"Expense\">Expense</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Category</InputLabel>\r\n          <Select\r\n            value={formData.category}\r\n            onChange={(e) =>\r\n              setFormData({ ...formData, category: e.target.value })\r\n            }\r\n          >\r\n            {selectedCategories.map((c) => (\r\n              <MenuItem key={c.type} value={c.type}>\r\n                {c.type}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          type=\"number\"\r\n          label=\"Amount\"\r\n          value={formData.amount}\r\n          onChange={(e) => setFormData({ ...formData, amount: e.target.value })}\r\n          fullWidth\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          fullWidth\r\n          label=\"Date\"\r\n          type=\"date\"\r\n          value={formData.date}\r\n          onChange={(e) =>\r\n            setFormData({ ...formData, date: formatDate(e.target.value) })\r\n          }\r\n        />\r\n      </Grid>\r\n      <Button\r\n        className={classes.button}\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        fullWidth\r\n        onClick={createTransaction}\r\n      >\r\n        Create\r\n      </Button>\r\n    </Grid>\r\n  );\r\n};\r\nexport default NewForm;\r\n","E:\\Study\\React projects\\Expense\\expense_tracker\\src\\constants\\categories.js",[],"E:\\Study\\React projects\\Expense\\expense_tracker\\src\\component\\Holder\\Form\\styles.js",[],"E:\\Study\\React projects\\Expense\\expense_tracker\\src\\utils\\formateDate.js",["88"],"export default (date) => {\r\n  const d = new Date(date);\r\n  let month = `${d.getMonth() + 1}`;\r\n  let day = `${d.getDate()}`;\r\n  const year = d.getFullYear();\r\n\r\n  if (month.length < 2) {\r\n    month = `0${month}`;\r\n  }\r\n  if (day.length < 2) {\r\n    day = `0${day}`;\r\n  }\r\n\r\n  return [year, month, day].join(\"-\");\r\n};\r\n","E:\\Study\\React projects\\Expense\\expense_tracker\\src\\context\\context.js",[],"E:\\Study\\React projects\\Expense\\expense_tracker\\src\\context\\contextReducer.js",[],"E:\\Study\\React projects\\Expense\\expense_tracker\\src\\component\\Holder\\List\\List.js",["89"],"import {\r\n  List as MUIList,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  IconButton,\r\n  Slide,\r\n} from \"@material-ui/core\";\r\nimport react, { useContext } from \"react\";\r\nimport { Delete, MoneyOff } from \"@material-ui/icons\";\r\n\r\nimport { ExpenseTrackerContext } from \"../../../context/context\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst List = () => {\r\n  const classes = useStyles();\r\n  const { transactions, deleteTransaction } = useContext(ExpenseTrackerContext);\r\n\r\n  return (\r\n    <MUIList dense={false} className={classes.list}>\r\n      {transactions.map((transaction) => (\r\n        <Slide\r\n          direction=\"down\"\r\n          in\r\n          mountOnEnter\r\n          unmountOnExit\r\n          key={transaction.id}\r\n        >\r\n          <ListItem>\r\n            <ListItemAvatar>\r\n              <Avatar\r\n                className={\r\n                  transaction.type === \"Income\"\r\n                    ? classes.avatarIncome\r\n                    : classes.avatarExpense\r\n                }\r\n              >\r\n                <MoneyOff />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              primary={transaction.category}\r\n              secondary={`$${transaction.amount} - ${transaction.date}`}\r\n            />\r\n            <ListItemSecondaryAction>\r\n              <IconButton\r\n                edge=\"end\"\r\n                aria-label=\"delete\"\r\n                onClick={() => deleteTransaction(transaction.id)}\r\n              >\r\n                <Delete />\r\n              </IconButton>\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        </Slide>\r\n      ))}\r\n    </MUIList>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","E:\\Study\\React projects\\Expense\\expense_tracker\\src\\component\\Holder\\List\\styles.js",["90","91"],"import React, { useContext } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { red, green } from \"@material-ui/core/colors\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  avatarIncome: {\r\n    color: \"#fff\",\r\n    backgroundColor: green[500],\r\n  },\r\n  avatarExpense: {\r\n    color: theme.palette.getContrastText(red[500]),\r\n    backgroundColor: red[500],\r\n  },\r\n  list: {\r\n    maxHeight: \"150px\",\r\n    overflow: \"auto\",\r\n  },\r\n}));\r\n",["92","93"],"E:\\Study\\React projects\\Expense\\expense_tracker\\src\\useTransactions.js",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":4,"column":17,"nodeType":"100","messageId":"101","endLine":4,"endColumn":25},{"ruleId":"98","severity":1,"message":"102","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":27},{"ruleId":"98","severity":1,"message":"99","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":25},{"ruleId":"98","severity":1,"message":"103","line":1,"column":27,"nodeType":"100","messageId":"101","endLine":1,"endColumn":36},{"ruleId":"98","severity":1,"message":"104","line":10,"column":10,"nodeType":"100","messageId":"101","endLine":10,"endColumn":26},{"ruleId":"98","severity":1,"message":"105","line":36,"column":10,"nodeType":"100","messageId":"101","endLine":36,"endColumn":14},{"ruleId":"106","severity":1,"message":"107","line":117,"column":6,"nodeType":"108","endLine":117,"endColumn":15,"suggestions":"109"},{"ruleId":"110","severity":1,"message":"111","line":1,"column":1,"nodeType":"112","endLine":15,"endColumn":3},{"ruleId":"98","severity":1,"message":"113","line":11,"column":8,"nodeType":"100","messageId":"101","endLine":11,"endColumn":13},{"ruleId":"98","severity":1,"message":"114","line":1,"column":8,"nodeType":"100","messageId":"101","endLine":1,"endColumn":13},{"ruleId":"98","severity":1,"message":"102","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":27},{"ruleId":"94","replacedBy":"115"},{"ruleId":"96","replacedBy":"116"},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'useEffect' is defined but never used.","'useSpeechContext' is defined but never used.","'open' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createTransaction' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["119"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'react' is defined but never used.","'React' is defined but never used.",["117"],["118"],"no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},"Update the dependencies array to be: [createTransaction, formData, segment]",{"range":"122","text":"123"},[3318,3327],"[createTransaction, formData, segment]"]